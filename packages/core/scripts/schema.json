{
  "$ref": "#/definitions/IConfig",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "AbapdocConf": {
      "additionalProperties": false,
      "properties": {
        "checkLocal": {
          "description": "Check local classes and interfaces for abapdoc.",
          "type": "boolean"
        },
        "classDefinition": {
          "type": "boolean"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "interfaceDefinition": {
          "type": "boolean"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "checkLocal",
        "classDefinition",
        "interfaceDefinition"
      ],
      "type": "object"
    },
    "AlignParametersConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "AllowedObjectNamingConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "AllowedObjectTypesConf": {
      "additionalProperties": false,
      "properties": {
        "allowed": {
          "description": "List of allowed object types, example: [\"CLAS\", \"INTF\"]",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "allowed"
      ],
      "type": "object"
    },
    "AmbiguousStatementConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "AvoidUseConf": {
      "additionalProperties": false,
      "properties": {
        "break": {
          "description": "Detects BREAK and BREAK-POINTS",
          "type": "boolean"
        },
        "defaultKey": {
          "description": "Detects DEFAULT KEY definitions, from version v740sp02 and up",
          "type": "boolean"
        },
        "define": {
          "description": "Detects DEFINE (macro definitions)",
          "type": "boolean"
        },
        "describeLines": {
          "description": "Detects DESCRIBE TABLE LINES, use lines() instead",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "exportToDatabase": {
          "description": "Detects EXPORT TO DATABASE",
          "type": "boolean"
        },
        "exportToMemory": {
          "description": "Detects EXPORT TO MEMORY",
          "type": "boolean"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        },
        "skipQuickFix": {
          "description": "Do not emit quick fix suggestion",
          "type": "boolean"
        },
        "statics": {
          "description": "Detects statics",
          "type": "boolean"
        },
        "testSeams": {
          "description": "Detects TEST SEAMS",
          "type": "boolean"
        }
      },
      "required": [
        "define",
        "statics",
        "defaultKey",
        "break",
        "testSeams",
        "describeLines",
        "exportToMemory",
        "exportToDatabase"
      ],
      "type": "object"
    },
    "BeginEndNamesConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "BeginSingleIncludeConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "CDSCommentStyleConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "CDSLegacyViewConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "CDSParserErrorConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "CallTransactionAuthorityCheckConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "ChainMainlyDeclarationsConf": {
      "additionalProperties": false,
      "properties": {
        "check": {
          "description": "Allow CHECK statements to be chained",
          "type": "boolean"
        },
        "clear": {
          "description": "Allow CLEAR statements to be chained",
          "type": "boolean"
        },
        "definitions": {
          "description": "Allow definition statements to be chained",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "free": {
          "description": "Allow FREE statements to be chained",
          "type": "boolean"
        },
        "hide": {
          "description": "Allow HIDE statements to be chained",
          "type": "boolean"
        },
        "include": {
          "description": "Allow INCLUDE statements to be chained",
          "type": "boolean"
        },
        "move": {
          "description": "Allow MOVE statements to be chained",
          "type": "boolean"
        },
        "refresh": {
          "description": "Allow REFRESH statements to be chained",
          "type": "boolean"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        },
        "sort": {
          "description": "Allow SORT statements to be chained",
          "type": "boolean"
        },
        "unassign": {
          "description": "Allow UNASSIGN statements to be chained",
          "type": "boolean"
        },
        "write": {
          "description": "Allow WRITE statements to be chained",
          "type": "boolean"
        }
      },
      "required": [
        "definitions",
        "write",
        "move",
        "refresh",
        "unassign",
        "clear",
        "hide",
        "free",
        "include",
        "check",
        "sort"
      ],
      "type": "object"
    },
    "ChangeIfToCaseConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        },
        "skipNames": {
          "description": "skip specific names, case insensitive regular expression",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "type": "object"
    },
    "CheckAbstractConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "CheckCommentsConf": {
      "additionalProperties": false,
      "properties": {
        "allowEndOfLine": {
          "description": "Allows the use of end-of-line comments.",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "allowEndOfLine"
      ],
      "type": "object"
    },
    "CheckDDICConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "CheckIncludeConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "CheckSubrcConf": {
      "additionalProperties": false,
      "properties": {
        "assign": {
          "type": "boolean"
        },
        "authorityCheck": {
          "type": "boolean"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "find": {
          "type": "boolean"
        },
        "insertDatabase": {
          "type": "boolean"
        },
        "modifyDatabase": {
          "type": "boolean"
        },
        "openDataset": {
          "type": "boolean"
        },
        "readTable": {
          "type": "boolean"
        },
        "selectSingle": {
          "type": "boolean"
        },
        "selectTable": {
          "type": "boolean"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        },
        "updateDatabase": {
          "type": "boolean"
        }
      },
      "required": [
        "openDataset",
        "authorityCheck",
        "selectSingle",
        "selectTable",
        "updateDatabase",
        "insertDatabase",
        "modifyDatabase",
        "readTable",
        "assign",
        "find"
      ],
      "type": "object"
    },
    "CheckSyntaxConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "CheckTextElementsConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "CheckTransformationExistsConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "ClassAttributeNamesConf": {
      "additionalProperties": false,
      "properties": {
        "constants": {
          "description": "The pattern for constant variable names",
          "type": "string"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreExceptions": {
          "description": "Ignore global exception classes",
          "type": "boolean"
        },
        "ignoreInterfaces": {
          "description": "Ignore interfaces",
          "type": "boolean"
        },
        "ignoreLocal": {
          "description": "Ignore local classes",
          "type": "boolean"
        },
        "ignoreNames": {
          "description": "A list of names to be ignored",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignorePatterns": {
          "description": "A list of patterns to be ignored. For example, you can use it to ignore ambiguous prefixes",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "instance": {
          "description": "The pattern for instance variable names",
          "type": "string"
        },
        "patternKind": {
          "$ref": "#/definitions/PatternKind",
          "description": "Specifies whether the pattern is forbidden (violation if name matches) or required (violation if name does not match)."
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        },
        "statics": {
          "description": "The pattern for static variable names",
          "type": "string"
        }
      },
      "required": [
        "ignoreExceptions",
        "ignoreLocal",
        "ignoreInterfaces",
        "statics",
        "instance",
        "constants"
      ],
      "type": "object"
    },
    "ClassicExceptionsOverlapConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "CloudTypesConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "ColonMissingSpaceConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "CommentedCodeConf": {
      "additionalProperties": false,
      "properties": {
        "allowIncludeInFugr": {
          "description": "Allow INCLUDEs in function groups",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "allowIncludeInFugr"
      ],
      "type": "object"
    },
    "ConstantClassesConf": {
      "additionalProperties": false,
      "description": "Checks that constants classes are in sync with domain fixed values",
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "mapping": {
          "description": "Specify a list of domain-class pairs which will be validated",
          "items": {
            "$ref": "#/definitions/DomainClassMapping"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "mapping"
      ],
      "type": "object"
    },
    "ConstructorVisibilityPublicConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "ContainsTabConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        },
        "spaces": {
          "description": "quick fix replace with number of spaces",
          "type": "number"
        }
      },
      "required": [
        "spaces"
      ],
      "type": "object"
    },
    "CyclicOOConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        },
        "skip": {
          "description": "List of object names to skip, must be full upper case name",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "skipSharedMemory": {
          "description": "Skips shared memory enabled classes",
          "type": "boolean"
        },
        "skipTestclasses": {
          "description": "Skip testclass inclues",
          "type": "boolean"
        }
      },
      "required": [
        "skip",
        "skipSharedMemory",
        "skipTestclasses"
      ],
      "type": "object"
    },
    "CyclomaticComplexityConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "max": {
          "type": "number"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "max"
      ],
      "type": "object"
    },
    "DangerousStatementConf": {
      "additionalProperties": false,
      "properties": {
        "deleteDynpro": {
          "type": "boolean"
        },
        "deleteReport": {
          "type": "boolean"
        },
        "deleteTextpool": {
          "type": "boolean"
        },
        "dynamicSQL": {
          "description": "Finds instances of dynamic SQL: SELECT, UPDATE, DELETE, INSERT, MODIFY",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "execSQL": {
          "description": "Detects execSQL (dynamic SQL)",
          "type": "boolean"
        },
        "exportDynpro": {
          "type": "boolean"
        },
        "generateDynpro": {
          "type": "boolean"
        },
        "generateReport": {
          "type": "boolean"
        },
        "generateSubroutine": {
          "type": "boolean"
        },
        "insertReport": {
          "description": "Detects INSERT REPORT",
          "type": "boolean"
        },
        "kernelCall": {
          "description": "Detects kernel calls",
          "type": "boolean"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        },
        "systemCall": {
          "description": "Detects SYSTEM-CALL",
          "type": "boolean"
        }
      },
      "required": [
        "execSQL",
        "kernelCall",
        "systemCall",
        "insertReport",
        "generateDynpro",
        "generateReport",
        "generateSubroutine",
        "deleteReport",
        "deleteTextpool",
        "deleteDynpro",
        "exportDynpro",
        "dynamicSQL"
      ],
      "type": "object"
    },
    "DbOperationInLoopConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "DefinitionsTopConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "DescriptionEmptyConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "DomainClassMapping": {
      "additionalProperties": false,
      "properties": {
        "class": {
          "description": "Class name",
          "type": "string"
        },
        "constantForDomainName": {
          "description": "Specify additional constant name containing the domain name (optional). A domain name constant is preferable to using a hardcoded value as the usage can be located by a where-used-list",
          "type": "string"
        },
        "domain": {
          "description": "Domain name. The domain must have fixed values.",
          "type": "string"
        },
        "useExactType": {
          "description": "Ensure the type of the constant is an exact match of the domain name.",
          "type": "boolean"
        }
      },
      "required": [
        "domain",
        "class"
      ],
      "type": "object"
    },
    "DoubleSpaceConf": {
      "additionalProperties": false,
      "properties": {
        "afterColon": {
          "description": "Check for double space after colon/chaining operator",
          "type": "boolean"
        },
        "endParen": {
          "description": "Check for double space before end parenthesis",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "keywords": {
          "description": "Check for double space after keywords",
          "type": "boolean"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        },
        "startParen": {
          "description": "Check for double space after start parenthesis",
          "type": "boolean"
        }
      },
      "required": [
        "keywords",
        "startParen",
        "endParen",
        "afterColon"
      ],
      "type": "object"
    },
    "DownportConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "EasyToFindMessagesConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "EmptyLineinStatementConf": {
      "additionalProperties": false,
      "properties": {
        "allowChained": {
          "description": "Allow changed empty lines in chanined statements",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "allowChained"
      ],
      "type": "object"
    },
    "EmptyStatementConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "EmptyStructureConf": {
      "additionalProperties": false,
      "properties": {
        "at": {
          "description": "Checks for empty AT blocks",
          "type": "boolean"
        },
        "case": {
          "description": "Checks for empty CASE blocks",
          "type": "boolean"
        },
        "do": {
          "description": "Checks for empty DO blocks",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "if": {
          "description": "Checks for empty IF blocks",
          "type": "boolean"
        },
        "loop": {
          "description": "Checks for empty LOOP blocks",
          "type": "boolean"
        },
        "select": {
          "description": "Checks for empty SELECT blockss",
          "type": "boolean"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        },
        "try": {
          "description": "Checks for empty TRY blocks",
          "type": "boolean"
        },
        "when": {
          "description": "Checks for empty WHEN blocks",
          "type": "boolean"
        },
        "while": {
          "description": "Checks for empty WHILE blocks",
          "type": "boolean"
        }
      },
      "required": [
        "loop",
        "if",
        "while",
        "case",
        "select",
        "do",
        "at",
        "try",
        "when"
      ],
      "type": "object"
    },
    "ExitOrCheckConf": {
      "additionalProperties": false,
      "properties": {
        "allowCheck": {
          "type": "boolean"
        },
        "allowExit": {
          "type": "boolean"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "allowExit",
        "allowCheck"
      ],
      "type": "object"
    },
    "ExpandMacrosConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "ExportingConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "ForbiddenIdentifierConf": {
      "additionalProperties": false,
      "properties": {
        "check": {
          "description": "List of forbideen identifiers, array of string regex",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "check"
      ],
      "type": "object"
    },
    "ForbiddenPseudoAndPragmaConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreGlobalClassDefinition": {
          "type": "boolean"
        },
        "ignoreGlobalInterface": {
          "type": "boolean"
        },
        "pragmas": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "pseudo": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "pseudo",
        "pragmas",
        "ignoreGlobalClassDefinition",
        "ignoreGlobalInterface"
      ],
      "type": "object"
    },
    "ForbiddenVoidTypeConf": {
      "additionalProperties": false,
      "properties": {
        "check": {
          "description": "List of forbidden void types, array of string regex, case in-sensitive",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "check"
      ],
      "type": "object"
    },
    "FormTablesObsoleteConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "FullyTypeConsantsConf": {
      "additionalProperties": false,
      "properties": {
        "checkData": {
          "description": "Add check for implicit data definition, require full typing.",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "checkData"
      ],
      "type": "object"
    },
    "FullyTypeITabsConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "FunctionModuleRecommendationsConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "recommendations": {
          "description": "Tuple of Function Module Name to be replaced, the recommended alternative and the version from which the recommendation is valid.",
          "items": {
            "$ref": "#/definitions/Recommendations"
          },
          "type": "array",
          "uniqueItems": true
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "recommendations"
      ],
      "type": "object"
    },
    "FunctionalWritingConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreExceptions": {
          "description": "Ignore functional writing in exception classes, local + global",
          "type": "boolean"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "ignoreExceptions"
      ],
      "type": "object"
    },
    "GlobalClassConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "IAbaplintAppSettings": {
      "additionalProperties": false,
      "properties": {
        "observations": {
          "description": "Enable or disable observations, enabled by default",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IConfig": {
      "additionalProperties": false,
      "properties": {
        "app": {
          "$ref": "#/definitions/IAbaplintAppSettings",
          "description": "abaplint.app settings, see https://docs.abaplint.app"
        },
        "dependencies": {
          "description": "External git dependencies used for syntax checks",
          "items": {
            "$ref": "#/definitions/IDependency"
          },
          "type": "array"
        },
        "global": {
          "$ref": "#/definitions/IGlobalConfig",
          "description": "Global settings"
        },
        "rename": {
          "$ref": "#/definitions/IRenameSettings",
          "description": "Automatic object rename settings, use with command line paramter \"--rename\""
        },
        "rules": {
          "additionalProperties": false,
          "description": "Settings for each rule, see https://rules.abaplint.org",
          "properties": {
            "7bit_ascii": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SevenBitAsciiConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "abapdoc": {
              "anyOf": [
                {
                  "$ref": "#/definitions/AbapdocConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "align_parameters": {
              "anyOf": [
                {
                  "$ref": "#/definitions/AlignParametersConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "allowed_object_naming": {
              "anyOf": [
                {
                  "$ref": "#/definitions/AllowedObjectNamingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "allowed_object_types": {
              "anyOf": [
                {
                  "$ref": "#/definitions/AllowedObjectTypesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "ambiguous_statement": {
              "anyOf": [
                {
                  "$ref": "#/definitions/AmbiguousStatementConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "avoid_use": {
              "anyOf": [
                {
                  "$ref": "#/definitions/AvoidUseConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "begin_end_names": {
              "anyOf": [
                {
                  "$ref": "#/definitions/BeginEndNamesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "begin_single_include": {
              "anyOf": [
                {
                  "$ref": "#/definitions/BeginSingleIncludeConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "call_transaction_authority_check": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CallTransactionAuthorityCheckConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "cds_comment_style": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CDSCommentStyleConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "cds_legacy_view": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CDSLegacyViewConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "cds_parser_error": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CDSParserErrorConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "chain_mainly_declarations": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ChainMainlyDeclarationsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "change_if_to_case": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ChangeIfToCaseConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "check_abstract": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CheckAbstractConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "check_comments": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CheckCommentsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "check_ddic": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CheckDDICConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "check_include": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CheckIncludeConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "check_subrc": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CheckSubrcConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "check_syntax": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CheckSyntaxConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "check_text_elements": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CheckTextElementsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "check_transformation_exists": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CheckTransformationExistsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "class_attribute_names": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ClassAttributeNamesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "classic_exceptions_overlap": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ClassicExceptionsOverlapConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "cloud_types": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CloudTypesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "colon_missing_space": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ColonMissingSpaceConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "commented_code": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CommentedCodeConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "constant_classes": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ConstantClassesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "constructor_visibility_public": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ConstructorVisibilityPublicConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "contains_tab": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ContainsTabConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "cyclic_oo": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CyclicOOConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "cyclomatic_complexity": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CyclomaticComplexityConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "dangerous_statement": {
              "anyOf": [
                {
                  "$ref": "#/definitions/DangerousStatementConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "db_operation_in_loop": {
              "anyOf": [
                {
                  "$ref": "#/definitions/DbOperationInLoopConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "definitions_top": {
              "anyOf": [
                {
                  "$ref": "#/definitions/DefinitionsTopConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "description_empty": {
              "anyOf": [
                {
                  "$ref": "#/definitions/DescriptionEmptyConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "double_space": {
              "anyOf": [
                {
                  "$ref": "#/definitions/DoubleSpaceConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "downport": {
              "anyOf": [
                {
                  "$ref": "#/definitions/DownportConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "easy_to_find_messages": {
              "anyOf": [
                {
                  "$ref": "#/definitions/EasyToFindMessagesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "empty_line_in_statement": {
              "anyOf": [
                {
                  "$ref": "#/definitions/EmptyLineinStatementConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "empty_statement": {
              "anyOf": [
                {
                  "$ref": "#/definitions/EmptyStatementConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "empty_structure": {
              "anyOf": [
                {
                  "$ref": "#/definitions/EmptyStructureConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "exit_or_check": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ExitOrCheckConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "expand_macros": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ExpandMacrosConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "exporting": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ExportingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "forbidden_identifier": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ForbiddenIdentifierConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "forbidden_pseudo_and_pragma": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ForbiddenPseudoAndPragmaConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "forbidden_void_type": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ForbiddenVoidTypeConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "form_tables_obsolete": {
              "anyOf": [
                {
                  "$ref": "#/definitions/FormTablesObsoleteConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "fully_type_constants": {
              "anyOf": [
                {
                  "$ref": "#/definitions/FullyTypeConsantsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "fully_type_itabs": {
              "anyOf": [
                {
                  "$ref": "#/definitions/FullyTypeITabsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "function_module_recommendations": {
              "anyOf": [
                {
                  "$ref": "#/definitions/FunctionModuleRecommendationsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "functional_writing": {
              "anyOf": [
                {
                  "$ref": "#/definitions/FunctionalWritingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "global_class": {
              "anyOf": [
                {
                  "$ref": "#/definitions/GlobalClassConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "identical_conditions": {
              "anyOf": [
                {
                  "$ref": "#/definitions/IdenticalConditionsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "identical_contents": {
              "anyOf": [
                {
                  "$ref": "#/definitions/IdenticalContentsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "identical_descriptions": {
              "anyOf": [
                {
                  "$ref": "#/definitions/IdenticalDescriptionsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "identical_form_names": {
              "anyOf": [
                {
                  "$ref": "#/definitions/IdenticalFormNamesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "if_in_if": {
              "anyOf": [
                {
                  "$ref": "#/definitions/IfInIfConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "implement_methods": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ImplementMethodsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "in_statement_indentation": {
              "anyOf": [
                {
                  "$ref": "#/definitions/InStatementIndentationConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "indentation": {
              "anyOf": [
                {
                  "$ref": "#/definitions/IndentationConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "inline_data_old_versions": {
              "anyOf": [
                {
                  "$ref": "#/definitions/InlineDataOldVersionsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "intf_referencing_clas": {
              "anyOf": [
                {
                  "$ref": "#/definitions/IntfReferencingClasConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "keep_single_parameter_on_one_line": {
              "anyOf": [
                {
                  "$ref": "#/definitions/KeepSingleParameterCallsOnOneLineConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "keyword_case": {
              "anyOf": [
                {
                  "$ref": "#/definitions/KeywordCaseConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "line_break_multiple_parameters": {
              "anyOf": [
                {
                  "$ref": "#/definitions/LineBreakMultipleParametersConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "line_break_style": {
              "anyOf": [
                {
                  "$ref": "#/definitions/LineBreakStyleConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "line_length": {
              "anyOf": [
                {
                  "$ref": "#/definitions/LineLengthConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "line_only_punc": {
              "anyOf": [
                {
                  "$ref": "#/definitions/LineOnlyPuncConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "local_class_naming": {
              "anyOf": [
                {
                  "$ref": "#/definitions/LocalClassNamingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "local_testclass_consistency": {
              "anyOf": [
                {
                  "$ref": "#/definitions/LocalTestclassConsistencyConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "local_variable_names": {
              "anyOf": [
                {
                  "$ref": "#/definitions/LocalVariableNamesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "main_file_contents": {
              "anyOf": [
                {
                  "$ref": "#/definitions/MainFileContentsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "many_parentheses": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ManyParenthesesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "max_one_method_parameter_per_line": {
              "anyOf": [
                {
                  "$ref": "#/definitions/MaxOneMethodParameterPerLineConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "max_one_statement": {
              "anyOf": [
                {
                  "$ref": "#/definitions/MaxOneStatementConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "message_exists": {
              "anyOf": [
                {
                  "$ref": "#/definitions/MessageExistsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "method_implemented_twice": {
              "anyOf": [
                {
                  "$ref": "#/definitions/MethodImplementedTwiceConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "method_length": {
              "anyOf": [
                {
                  "$ref": "#/definitions/MethodLengthConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "method_overwrites_builtin": {
              "anyOf": [
                {
                  "$ref": "#/definitions/MethodOverwritesBuiltInConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "method_parameter_names": {
              "anyOf": [
                {
                  "$ref": "#/definitions/MethodParameterNamesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "mix_returning": {
              "anyOf": [
                {
                  "$ref": "#/definitions/MixReturningConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "modify_only_own_db_tables": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ModifyOnlyOwnDBTablesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "msag_consistency": {
              "anyOf": [
                {
                  "$ref": "#/definitions/MSAGConsistencyConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "names_no_dash": {
              "anyOf": [
                {
                  "$ref": "#/definitions/NamesNoDashConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "nesting": {
              "anyOf": [
                {
                  "$ref": "#/definitions/NestingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "newline_between_methods": {
              "anyOf": [
                {
                  "$ref": "#/definitions/NewlineBetweenMethodsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "no_aliases": {
              "anyOf": [
                {
                  "$ref": "#/definitions/NoAliasesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "no_chained_assignment": {
              "anyOf": [
                {
                  "$ref": "#/definitions/NoChainedAssignmentConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "no_external_form_calls": {
              "anyOf": [
                {
                  "$ref": "#/definitions/NoExternalFormCallsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "no_inline_in_optional_branches": {
              "anyOf": [
                {
                  "$ref": "#/definitions/NoInlineInOptionalBranchesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "no_public_attributes": {
              "anyOf": [
                {
                  "$ref": "#/definitions/NoPublicAttributesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "no_yoda_conditions": {
              "anyOf": [
                {
                  "$ref": "#/definitions/NoYodaConditionsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "nrob_consistency": {
              "anyOf": [
                {
                  "$ref": "#/definitions/NROBConsistencyConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "object_naming": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ObjectNamingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "obsolete_statement": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ObsoleteStatementConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "omit_parameter_name": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OmitParameterNameConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "omit_preceding_zeros": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OmitPrecedingZerosConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "omit_receiving": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OmitReceivingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "parser_702_chaining": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Parser702ChainingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "parser_error": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ParserErrorConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "parser_missing_space": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ParserMissingSpaceConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "pragma_style": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PragmaStyleConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "prefer_corresponding": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PreferCorrespondingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "prefer_inline": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PreferInlineConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "prefer_is_not": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PreferIsNotConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "prefer_pragmas": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PreferPragmasConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "prefer_raise_exception_new": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PreferRaiseExceptionNewConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "prefer_returning_to_exporting": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PreferReturningToExportingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "prefer_xsdbool": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PreferXsdboolConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "preferred_compare_operator": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PreferredCompareOperatorConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "prefix_is_current_class": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PrefixIsCurrentClassConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "reduce_string_templates": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ReduceStringTemplatesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "release_idoc": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ReleaseIdocConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "remove_descriptions": {
              "anyOf": [
                {
                  "$ref": "#/definitions/RemoveDescriptionsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "rfc_error_handling": {
              "anyOf": [
                {
                  "$ref": "#/definitions/RFCErrorHandlingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "select_add_order_by": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SelectAddOrderByConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "select_performance": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SelectPerformanceConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "select_single_full_key": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SelectSingleFullKeyConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "selection_screen_naming": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SelectionScreenNamingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "sequential_blank": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SequentialBlankConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "short_case": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ShortCaseConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "sicf_consistency": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SICFConsistencyConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "slow_parameter_passing": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SlowParameterPassingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "smim_consistency": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SMIMConsistencyConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "space_before_colon": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SpaceBeforeColonConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "space_before_dot": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SpaceBeforeDotConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "sql_escape_host_variables": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SQLEscapeHostVariablesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "sql_value_conversion": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SQLValueConversionConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "start_at_tab": {
              "anyOf": [
                {
                  "$ref": "#/definitions/StartAtTabConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "static_call_via_instance": {
              "anyOf": [
                {
                  "$ref": "#/definitions/StaticCallViaInstanceConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "strict_sql": {
              "anyOf": [
                {
                  "$ref": "#/definitions/StrictSQLConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "superclass_final": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SuperclassFinalConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "superfluous_value": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SuperfluousValueConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "sy_modification": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SyModificationConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "tabl_enhancement_category": {
              "anyOf": [
                {
                  "$ref": "#/definitions/TABLEnhancementCategoryConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "try_without_catch": {
              "anyOf": [
                {
                  "$ref": "#/definitions/TryWithoutCatchConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "type_form_parameters": {
              "anyOf": [
                {
                  "$ref": "#/definitions/TypeFormParametersConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "types_naming": {
              "anyOf": [
                {
                  "$ref": "#/definitions/TypesNamingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "uncaught_exception": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UncaughtExceptionConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "unknown_types": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UnknownTypesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "unnecessary_chaining": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UnnecessaryChainingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "unnecessary_pragma": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UnnecessaryPragmaConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "unnecessary_return": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UnnecessaryReturnConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "unreachable_code": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UnreachableCodeConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "unsecure_fae": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UnsecureFAEConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "unused_ddic": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UnusedDDICConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "unused_methods": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UnusedMethodsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "unused_types": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UnusedTypesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "unused_variables": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UnusedVariablesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "use_bool_expression": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UseBoolExpressionConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "use_class_based_exceptions": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UseClassBasedExceptionsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "use_line_exists": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UseLineExistsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "use_new": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UseNewConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "when_others_last": {
              "anyOf": [
                {
                  "$ref": "#/definitions/WhenOthersLastConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "whitespace_end": {
              "anyOf": [
                {
                  "$ref": "#/definitions/WhitespaceEndConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "xml_consistency": {
              "anyOf": [
                {
                  "$ref": "#/definitions/XMLConsistencyConf"
                },
                {
                  "type": "boolean"
                }
              ]
            }
          },
          "type": "object"
        },
        "syntax": {
          "$ref": "#/definitions/ISyntaxSettings",
          "description": "Syntax settings"
        },
        "targetRules": {
          "additionalProperties": false,
          "description": "see https://abaplint.app",
          "properties": {
            "7bit_ascii": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SevenBitAsciiConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "abapdoc": {
              "anyOf": [
                {
                  "$ref": "#/definitions/AbapdocConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "align_parameters": {
              "anyOf": [
                {
                  "$ref": "#/definitions/AlignParametersConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "allowed_object_naming": {
              "anyOf": [
                {
                  "$ref": "#/definitions/AllowedObjectNamingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "allowed_object_types": {
              "anyOf": [
                {
                  "$ref": "#/definitions/AllowedObjectTypesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "ambiguous_statement": {
              "anyOf": [
                {
                  "$ref": "#/definitions/AmbiguousStatementConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "avoid_use": {
              "anyOf": [
                {
                  "$ref": "#/definitions/AvoidUseConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "begin_end_names": {
              "anyOf": [
                {
                  "$ref": "#/definitions/BeginEndNamesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "begin_single_include": {
              "anyOf": [
                {
                  "$ref": "#/definitions/BeginSingleIncludeConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "call_transaction_authority_check": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CallTransactionAuthorityCheckConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "cds_comment_style": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CDSCommentStyleConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "cds_legacy_view": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CDSLegacyViewConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "cds_parser_error": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CDSParserErrorConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "chain_mainly_declarations": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ChainMainlyDeclarationsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "change_if_to_case": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ChangeIfToCaseConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "check_abstract": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CheckAbstractConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "check_comments": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CheckCommentsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "check_ddic": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CheckDDICConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "check_include": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CheckIncludeConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "check_subrc": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CheckSubrcConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "check_syntax": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CheckSyntaxConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "check_text_elements": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CheckTextElementsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "check_transformation_exists": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CheckTransformationExistsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "class_attribute_names": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ClassAttributeNamesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "classic_exceptions_overlap": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ClassicExceptionsOverlapConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "cloud_types": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CloudTypesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "colon_missing_space": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ColonMissingSpaceConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "commented_code": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CommentedCodeConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "constant_classes": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ConstantClassesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "constructor_visibility_public": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ConstructorVisibilityPublicConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "contains_tab": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ContainsTabConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "cyclic_oo": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CyclicOOConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "cyclomatic_complexity": {
              "anyOf": [
                {
                  "$ref": "#/definitions/CyclomaticComplexityConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "dangerous_statement": {
              "anyOf": [
                {
                  "$ref": "#/definitions/DangerousStatementConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "db_operation_in_loop": {
              "anyOf": [
                {
                  "$ref": "#/definitions/DbOperationInLoopConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "definitions_top": {
              "anyOf": [
                {
                  "$ref": "#/definitions/DefinitionsTopConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "description_empty": {
              "anyOf": [
                {
                  "$ref": "#/definitions/DescriptionEmptyConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "double_space": {
              "anyOf": [
                {
                  "$ref": "#/definitions/DoubleSpaceConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "downport": {
              "anyOf": [
                {
                  "$ref": "#/definitions/DownportConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "easy_to_find_messages": {
              "anyOf": [
                {
                  "$ref": "#/definitions/EasyToFindMessagesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "empty_line_in_statement": {
              "anyOf": [
                {
                  "$ref": "#/definitions/EmptyLineinStatementConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "empty_statement": {
              "anyOf": [
                {
                  "$ref": "#/definitions/EmptyStatementConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "empty_structure": {
              "anyOf": [
                {
                  "$ref": "#/definitions/EmptyStructureConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "exit_or_check": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ExitOrCheckConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "expand_macros": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ExpandMacrosConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "exporting": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ExportingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "forbidden_identifier": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ForbiddenIdentifierConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "forbidden_pseudo_and_pragma": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ForbiddenPseudoAndPragmaConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "forbidden_void_type": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ForbiddenVoidTypeConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "form_tables_obsolete": {
              "anyOf": [
                {
                  "$ref": "#/definitions/FormTablesObsoleteConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "fully_type_constants": {
              "anyOf": [
                {
                  "$ref": "#/definitions/FullyTypeConsantsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "fully_type_itabs": {
              "anyOf": [
                {
                  "$ref": "#/definitions/FullyTypeITabsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "function_module_recommendations": {
              "anyOf": [
                {
                  "$ref": "#/definitions/FunctionModuleRecommendationsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "functional_writing": {
              "anyOf": [
                {
                  "$ref": "#/definitions/FunctionalWritingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "global_class": {
              "anyOf": [
                {
                  "$ref": "#/definitions/GlobalClassConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "identical_conditions": {
              "anyOf": [
                {
                  "$ref": "#/definitions/IdenticalConditionsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "identical_contents": {
              "anyOf": [
                {
                  "$ref": "#/definitions/IdenticalContentsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "identical_descriptions": {
              "anyOf": [
                {
                  "$ref": "#/definitions/IdenticalDescriptionsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "identical_form_names": {
              "anyOf": [
                {
                  "$ref": "#/definitions/IdenticalFormNamesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "if_in_if": {
              "anyOf": [
                {
                  "$ref": "#/definitions/IfInIfConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "implement_methods": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ImplementMethodsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "in_statement_indentation": {
              "anyOf": [
                {
                  "$ref": "#/definitions/InStatementIndentationConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "indentation": {
              "anyOf": [
                {
                  "$ref": "#/definitions/IndentationConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "inline_data_old_versions": {
              "anyOf": [
                {
                  "$ref": "#/definitions/InlineDataOldVersionsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "intf_referencing_clas": {
              "anyOf": [
                {
                  "$ref": "#/definitions/IntfReferencingClasConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "keep_single_parameter_on_one_line": {
              "anyOf": [
                {
                  "$ref": "#/definitions/KeepSingleParameterCallsOnOneLineConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "keyword_case": {
              "anyOf": [
                {
                  "$ref": "#/definitions/KeywordCaseConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "line_break_multiple_parameters": {
              "anyOf": [
                {
                  "$ref": "#/definitions/LineBreakMultipleParametersConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "line_break_style": {
              "anyOf": [
                {
                  "$ref": "#/definitions/LineBreakStyleConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "line_length": {
              "anyOf": [
                {
                  "$ref": "#/definitions/LineLengthConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "line_only_punc": {
              "anyOf": [
                {
                  "$ref": "#/definitions/LineOnlyPuncConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "local_class_naming": {
              "anyOf": [
                {
                  "$ref": "#/definitions/LocalClassNamingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "local_testclass_consistency": {
              "anyOf": [
                {
                  "$ref": "#/definitions/LocalTestclassConsistencyConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "local_variable_names": {
              "anyOf": [
                {
                  "$ref": "#/definitions/LocalVariableNamesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "main_file_contents": {
              "anyOf": [
                {
                  "$ref": "#/definitions/MainFileContentsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "many_parentheses": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ManyParenthesesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "max_one_method_parameter_per_line": {
              "anyOf": [
                {
                  "$ref": "#/definitions/MaxOneMethodParameterPerLineConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "max_one_statement": {
              "anyOf": [
                {
                  "$ref": "#/definitions/MaxOneStatementConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "message_exists": {
              "anyOf": [
                {
                  "$ref": "#/definitions/MessageExistsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "method_implemented_twice": {
              "anyOf": [
                {
                  "$ref": "#/definitions/MethodImplementedTwiceConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "method_length": {
              "anyOf": [
                {
                  "$ref": "#/definitions/MethodLengthConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "method_overwrites_builtin": {
              "anyOf": [
                {
                  "$ref": "#/definitions/MethodOverwritesBuiltInConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "method_parameter_names": {
              "anyOf": [
                {
                  "$ref": "#/definitions/MethodParameterNamesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "mix_returning": {
              "anyOf": [
                {
                  "$ref": "#/definitions/MixReturningConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "modify_only_own_db_tables": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ModifyOnlyOwnDBTablesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "msag_consistency": {
              "anyOf": [
                {
                  "$ref": "#/definitions/MSAGConsistencyConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "names_no_dash": {
              "anyOf": [
                {
                  "$ref": "#/definitions/NamesNoDashConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "nesting": {
              "anyOf": [
                {
                  "$ref": "#/definitions/NestingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "newline_between_methods": {
              "anyOf": [
                {
                  "$ref": "#/definitions/NewlineBetweenMethodsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "no_aliases": {
              "anyOf": [
                {
                  "$ref": "#/definitions/NoAliasesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "no_chained_assignment": {
              "anyOf": [
                {
                  "$ref": "#/definitions/NoChainedAssignmentConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "no_external_form_calls": {
              "anyOf": [
                {
                  "$ref": "#/definitions/NoExternalFormCallsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "no_inline_in_optional_branches": {
              "anyOf": [
                {
                  "$ref": "#/definitions/NoInlineInOptionalBranchesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "no_public_attributes": {
              "anyOf": [
                {
                  "$ref": "#/definitions/NoPublicAttributesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "no_yoda_conditions": {
              "anyOf": [
                {
                  "$ref": "#/definitions/NoYodaConditionsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "nrob_consistency": {
              "anyOf": [
                {
                  "$ref": "#/definitions/NROBConsistencyConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "object_naming": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ObjectNamingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "obsolete_statement": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ObsoleteStatementConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "omit_parameter_name": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OmitParameterNameConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "omit_preceding_zeros": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OmitPrecedingZerosConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "omit_receiving": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OmitReceivingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "parser_702_chaining": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Parser702ChainingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "parser_error": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ParserErrorConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "parser_missing_space": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ParserMissingSpaceConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "pragma_style": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PragmaStyleConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "prefer_corresponding": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PreferCorrespondingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "prefer_inline": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PreferInlineConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "prefer_is_not": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PreferIsNotConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "prefer_pragmas": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PreferPragmasConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "prefer_raise_exception_new": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PreferRaiseExceptionNewConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "prefer_returning_to_exporting": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PreferReturningToExportingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "prefer_xsdbool": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PreferXsdboolConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "preferred_compare_operator": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PreferredCompareOperatorConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "prefix_is_current_class": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PrefixIsCurrentClassConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "reduce_string_templates": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ReduceStringTemplatesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "release_idoc": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ReleaseIdocConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "remove_descriptions": {
              "anyOf": [
                {
                  "$ref": "#/definitions/RemoveDescriptionsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "rfc_error_handling": {
              "anyOf": [
                {
                  "$ref": "#/definitions/RFCErrorHandlingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "select_add_order_by": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SelectAddOrderByConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "select_performance": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SelectPerformanceConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "select_single_full_key": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SelectSingleFullKeyConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "selection_screen_naming": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SelectionScreenNamingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "sequential_blank": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SequentialBlankConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "short_case": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ShortCaseConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "sicf_consistency": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SICFConsistencyConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "slow_parameter_passing": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SlowParameterPassingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "smim_consistency": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SMIMConsistencyConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "space_before_colon": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SpaceBeforeColonConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "space_before_dot": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SpaceBeforeDotConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "sql_escape_host_variables": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SQLEscapeHostVariablesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "sql_value_conversion": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SQLValueConversionConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "start_at_tab": {
              "anyOf": [
                {
                  "$ref": "#/definitions/StartAtTabConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "static_call_via_instance": {
              "anyOf": [
                {
                  "$ref": "#/definitions/StaticCallViaInstanceConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "strict_sql": {
              "anyOf": [
                {
                  "$ref": "#/definitions/StrictSQLConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "superclass_final": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SuperclassFinalConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "superfluous_value": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SuperfluousValueConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "sy_modification": {
              "anyOf": [
                {
                  "$ref": "#/definitions/SyModificationConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "tabl_enhancement_category": {
              "anyOf": [
                {
                  "$ref": "#/definitions/TABLEnhancementCategoryConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "try_without_catch": {
              "anyOf": [
                {
                  "$ref": "#/definitions/TryWithoutCatchConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "type_form_parameters": {
              "anyOf": [
                {
                  "$ref": "#/definitions/TypeFormParametersConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "types_naming": {
              "anyOf": [
                {
                  "$ref": "#/definitions/TypesNamingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "uncaught_exception": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UncaughtExceptionConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "unknown_types": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UnknownTypesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "unnecessary_chaining": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UnnecessaryChainingConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "unnecessary_pragma": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UnnecessaryPragmaConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "unnecessary_return": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UnnecessaryReturnConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "unreachable_code": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UnreachableCodeConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "unsecure_fae": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UnsecureFAEConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "unused_ddic": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UnusedDDICConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "unused_methods": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UnusedMethodsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "unused_types": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UnusedTypesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "unused_variables": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UnusedVariablesConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "use_bool_expression": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UseBoolExpressionConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "use_class_based_exceptions": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UseClassBasedExceptionsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "use_line_exists": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UseLineExistsConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "use_new": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UseNewConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "when_others_last": {
              "anyOf": [
                {
                  "$ref": "#/definitions/WhenOthersLastConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "whitespace_end": {
              "anyOf": [
                {
                  "$ref": "#/definitions/WhitespaceEndConf"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "xml_consistency": {
              "anyOf": [
                {
                  "$ref": "#/definitions/XMLConsistencyConf"
                },
                {
                  "type": "boolean"
                }
              ]
            }
          },
          "type": "object"
        }
      },
      "required": [
        "global",
        "syntax",
        "rules"
      ],
      "type": "object"
    },
    "IDependency": {
      "additionalProperties": false,
      "properties": {
        "files": {
          "description": "File search, glob pattern",
          "type": "string"
        },
        "folder": {
          "description": "Name of local folder with dependencies",
          "type": "string"
        },
        "url": {
          "description": "Url of a git repository",
          "type": "string"
        }
      },
      "required": [
        "files"
      ],
      "type": "object"
    },
    "IGlobalConfig": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "list of files to exclude, these files are not added when running syntax check or any other rules, case insensitive regex",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "files": {
          "description": "input files, glob format",
          "type": "string"
        },
        "noIssues": {
          "description": "list of files to not report any issues for, case insensitive regex",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "skipGeneratedBOPFInterfaces": {
          "type": "boolean"
        },
        "skipGeneratedFunctionGroups": {
          "description": "Skips generated table maintenances, determined via TOBJ object",
          "type": "boolean"
        },
        "skipGeneratedGatewayClasses": {
          "type": "boolean"
        },
        "skipGeneratedPersistentClasses": {
          "type": "boolean"
        },
        "skipGeneratedProxyClasses": {
          "type": "boolean"
        },
        "skipGeneratedProxyInterfaces": {
          "type": "boolean"
        },
        "skipIncludesWithoutMain": {
          "description": "Do not report any issues for includes without main programs",
          "type": "boolean"
        },
        "useApackDependencies": {
          "description": "Clone and parse dependencies specified in .apack-manifest.xml if it is present",
          "type": "boolean"
        }
      },
      "required": [
        "files"
      ],
      "type": "object"
    },
    "IRenameSettings": {
      "additionalProperties": false,
      "properties": {
        "output": {
          "description": "output folder, if value is empty or undefined the changes are written inline in the input folders",
          "type": "string"
        },
        "patterns": {
          "description": "List of rename patterns",
          "items": {
            "additionalProperties": false,
            "properties": {
              "newName": {
                "description": "new name, match groups from oldName regex can be used",
                "type": "string"
              },
              "oldName": {
                "description": "Matches object name, regex, case insensitive",
                "type": "string"
              },
              "type": {
                "description": "Object type, example \"CLAS\", regex, case insensitive",
                "type": "string"
              }
            },
            "required": [
              "type",
              "oldName",
              "newName"
            ],
            "type": "object"
          },
          "type": "array",
          "uniqueItems": true
        },
        "skip": {
          "description": "list of regex, matches filenames to be skipped, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "required": [
        "patterns"
      ],
      "type": "object"
    },
    "ISyntaxSettings": {
      "additionalProperties": false,
      "properties": {
        "errorNamespace": {
          "description": "Report error for objects in this regex namespace. Types not in namespace will be void. Case insensitive",
          "type": "string"
        },
        "globalConstants": {
          "description": "List of full named global constants (regex not possible)",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "globalMacros": {
          "description": "List of full named global macros (regex not possible)",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "version": {
          "$ref": "#/definitions/Version",
          "description": "ABAP language version"
        }
      },
      "required": [
        "errorNamespace"
      ],
      "type": "object"
    },
    "IdenticalConditionsConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "IdenticalContentsConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "IdenticalDescriptionsConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "IdenticalFormNamesConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "IfInIfConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "ImplementMethodsConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "InStatementIndentationConf": {
      "additionalProperties": false,
      "properties": {
        "blockStatements": {
          "description": "Additional indent for first statement of blocks",
          "type": "number"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreExceptions": {
          "description": "Ignore global exception classes",
          "type": "boolean"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "blockStatements",
        "ignoreExceptions"
      ],
      "type": "object"
    },
    "IndentationConf": {
      "additionalProperties": false,
      "properties": {
        "alignTryCatch": {
          "description": "Align TRY CATCH, TRY and CATCH should have the same indentation",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "globalClassSkipFirst": {
          "type": "boolean"
        },
        "ignoreExceptions": {
          "description": "Ignore global exception classes",
          "type": "boolean"
        },
        "ignoreGlobalClassDefinition": {
          "type": "boolean"
        },
        "ignoreGlobalInterface": {
          "type": "boolean"
        },
        "selectionScreenBlockIndentation": {
          "description": "Add indentation for SELECTION SCREEN BLOCK, standard pretty printer indents this from 754",
          "type": "boolean"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "ignoreExceptions",
        "alignTryCatch",
        "selectionScreenBlockIndentation",
        "globalClassSkipFirst",
        "ignoreGlobalClassDefinition",
        "ignoreGlobalInterface"
      ],
      "type": "object"
    },
    "InlineDataOldVersionsConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "IntfReferencingClasConf": {
      "additionalProperties": false,
      "properties": {
        "allow": {
          "description": "List of classes allowed to be referenced, regex, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "allow"
      ],
      "type": "object"
    },
    "KeepSingleParameterCallsOnOneLineConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "length": {
          "description": "Max line length, in characters",
          "type": "number"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "length"
      ],
      "type": "object"
    },
    "KeywordCaseConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreExceptions": {
          "description": "Ignore global exception classes",
          "type": "boolean"
        },
        "ignoreFunctionModuleName": {
          "type": "boolean"
        },
        "ignoreGlobalClassBoundaries": {
          "type": "boolean"
        },
        "ignoreGlobalClassDefinition": {
          "type": "boolean"
        },
        "ignoreGlobalInterface": {
          "type": "boolean"
        },
        "ignoreKeywords": {
          "description": "A list of keywords to be ignored",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreLowerClassImplmentationStatement": {
          "type": "boolean"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        },
        "style": {
          "$ref": "#/definitions/KeywordCaseStyle"
        }
      },
      "required": [
        "style",
        "ignoreExceptions",
        "ignoreLowerClassImplmentationStatement",
        "ignoreGlobalClassDefinition",
        "ignoreGlobalInterface",
        "ignoreFunctionModuleName",
        "ignoreGlobalClassBoundaries",
        "ignoreKeywords"
      ],
      "type": "object"
    },
    "KeywordCaseStyle": {
      "enum": [
        "upper",
        "lower"
      ],
      "type": "string"
    },
    "LineBreakMultipleParametersConf": {
      "additionalProperties": false,
      "properties": {
        "count": {
          "description": "Amount of allowed parameters on one line",
          "type": "number"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "count"
      ],
      "type": "object"
    },
    "LineBreakStyleConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "LineLengthConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "length": {
          "description": "Maximum line length in characters, trailing whitespace ignored",
          "type": "number"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "length"
      ],
      "type": "object"
    },
    "LineOnlyPuncConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreExceptions": {
          "description": "Ignore lines with only puncutation in global exception classes",
          "type": "boolean"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "ignoreExceptions"
      ],
      "type": "object"
    },
    "LocalClassNamingConf": {
      "additionalProperties": false,
      "properties": {
        "exception": {
          "description": "The pattern for local exception names",
          "type": "string"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreNames": {
          "description": "A list of names to be ignored",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignorePatterns": {
          "description": "A list of patterns to be ignored. For example, you can use it to ignore ambiguous prefixes",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "local": {
          "description": "The pattern for local class names",
          "type": "string"
        },
        "patternKind": {
          "$ref": "#/definitions/PatternKind",
          "description": "Specifies whether the pattern is forbidden (violation if name matches) or required (violation if name does not match)."
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        },
        "test": {
          "description": "The pattern for local test class names",
          "type": "string"
        }
      },
      "required": [
        "local",
        "exception",
        "test"
      ],
      "type": "object"
    },
    "LocalTestclassConsistencyConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "LocalVariableNamesConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "expectedConstant": {
          "description": "The pattern for local constant names",
          "type": "string"
        },
        "expectedData": {
          "description": "The pattern for local variable names",
          "type": "string"
        },
        "expectedFS": {
          "description": "The pattern for field symbol names",
          "type": "string"
        },
        "ignoreNames": {
          "description": "A list of names to be ignored",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignorePatterns": {
          "description": "A list of patterns to be ignored. For example, you can use it to ignore ambiguous prefixes",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "patternKind": {
          "$ref": "#/definitions/PatternKind",
          "description": "Specifies whether the pattern is forbidden (violation if name matches) or required (violation if name does not match)."
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "expectedData",
        "expectedConstant",
        "expectedFS"
      ],
      "type": "object"
    },
    "MSAGConsistencyConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "MainFileContentsConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "ManyParenthesesConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "MaxOneMethodParameterPerLineConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "MaxOneStatementConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "MessageExistsConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "MethodImplementedTwiceConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "MethodLengthConf": {
      "additionalProperties": false,
      "properties": {
        "checkForms": {
          "description": "Option to check forms.",
          "type": "boolean"
        },
        "errorWhenEmpty": {
          "description": "Checks for empty methods/forms.",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreTestClasses": {
          "description": "Option to ignore test classes for this check.",
          "type": "boolean"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        },
        "statements": {
          "description": "Maximum method/form length in statements.",
          "type": "number"
        }
      },
      "required": [
        "statements",
        "errorWhenEmpty",
        "ignoreTestClasses",
        "checkForms"
      ],
      "type": "object"
    },
    "MethodOverwritesBuiltInConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "MethodParameterNamesConf": {
      "additionalProperties": false,
      "properties": {
        "changing": {
          "description": "The pattern for changing parameters",
          "type": "string"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "exporting": {
          "description": "The pattern for exporting parameters",
          "type": "string"
        },
        "ignoreExceptions": {
          "description": "Ignore parameters in methods of exception classes",
          "type": "boolean"
        },
        "ignoreNames": {
          "description": "A list of names to be ignored",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignorePatterns": {
          "description": "A list of patterns to be ignored. For example, you can use it to ignore ambiguous prefixes",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "importing": {
          "description": "The pattern for importing parameters",
          "type": "string"
        },
        "patternKind": {
          "$ref": "#/definitions/PatternKind",
          "description": "Specifies whether the pattern is forbidden (violation if name matches) or required (violation if name does not match)."
        },
        "returning": {
          "description": "The pattern for returning parameters",
          "type": "string"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "ignoreExceptions",
        "importing",
        "returning",
        "changing",
        "exporting"
      ],
      "type": "object"
    },
    "MixReturningConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "ModifyOnlyOwnDBTablesConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ownTables": {
          "description": "Case insensitve regex for own tables",
          "type": "string"
        },
        "reportDynamic": {
          "type": "boolean"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "reportDynamic",
        "ownTables"
      ],
      "type": "object"
    },
    "NROBConsistencyConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "NamesNoDashConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "NestingConf": {
      "additionalProperties": false,
      "properties": {
        "depth": {
          "description": "Maximum allowed nesting depth",
          "type": "number"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "depth"
      ],
      "type": "object"
    },
    "NewlineBetweenMethodsConf": {
      "additionalProperties": false,
      "properties": {
        "count": {
          "description": "Amount of newlines, works in conjunction with \"newlineLogic\"",
          "type": "number"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "logic": {
          "$ref": "#/definitions/NewlineLogic",
          "description": "Exact: the exact number of required newlines between methods is defined by \"newlineAmount\"\n\nLess: the required number of newlines has to be less than \"newlineAmount\""
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "count",
        "logic"
      ],
      "type": "object"
    },
    "NewlineLogic": {
      "enum": [
        "exact",
        "less"
      ],
      "type": "string"
    },
    "NoAliasesConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "NoChainedAssignmentConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "NoExternalFormCallsConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "NoInlineInOptionalBranchesConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "NoPublicAttributesConf": {
      "additionalProperties": false,
      "properties": {
        "allowReadOnly": {
          "description": "Allows public attributes, if they are declared as READ-ONLY.",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreTestClasses": {
          "description": "Option to ignore test classes for this check.",
          "type": "boolean"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "allowReadOnly",
        "ignoreTestClasses"
      ],
      "type": "object"
    },
    "NoYodaConditionsConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "onlyConstants": {
          "description": "Only report issues where the left side is a constant",
          "type": "boolean"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "onlyConstants"
      ],
      "type": "object"
    },
    "ObjectNamingConf": {
      "additionalProperties": false,
      "properties": {
        "aqbg": {
          "description": "The regex pattern for ABAP Query: User group",
          "type": "string"
        },
        "aqqu": {
          "description": "The regex pattern for ABAP Query: Query",
          "type": "string"
        },
        "aqsg": {
          "description": "The regex pattern for ABAP Query: Functional area",
          "type": "string"
        },
        "auth": {
          "description": "The regex pattern for authorization object names",
          "type": "string"
        },
        "clas": {
          "description": "The regex pattern for global class names",
          "type": "string"
        },
        "cmod": {
          "description": "The regex pattern for Customer enhancement projects",
          "type": "string"
        },
        "doma": {
          "description": "The regex pattern for domain names",
          "type": "string"
        },
        "dtel": {
          "description": "The regex pattern for data element names",
          "type": "string"
        },
        "enho": {
          "description": "The regex pattern for Enhancement Implementation",
          "type": "string"
        },
        "enhs": {
          "description": "The regex pattern for Enhancement Spot",
          "type": "string"
        },
        "enqu": {
          "description": "The regex pattern for lock object names",
          "type": "string"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "form": {
          "description": "The regex pattern for SAPscript form",
          "type": "string"
        },
        "fugr": {
          "description": "The regex pattern for function group names",
          "type": "string"
        },
        "idoc": {
          "description": "The regex pattern for idoc names",
          "type": "string"
        },
        "ignoreNames": {
          "description": "A list of names to be ignored",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignorePatterns": {
          "description": "A list of patterns to be ignored. For example, you can use it to ignore ambiguous prefixes",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "intf": {
          "description": "The regex pattern for global interface names",
          "type": "string"
        },
        "msag": {
          "description": "The regex pattern for message class names",
          "type": "string"
        },
        "patternKind": {
          "$ref": "#/definitions/PatternKind",
          "description": "Specifies whether the pattern is forbidden (violation if name matches) or required (violation if name does not match)."
        },
        "pinf": {
          "description": "The regex pattern for package interface names",
          "type": "string"
        },
        "prog": {
          "description": "The regex pattern for program (report) names",
          "type": "string"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        },
        "sfpf": {
          "description": "The regex pattern for Adobe Form Definition",
          "type": "string"
        },
        "sfpi": {
          "description": "The regex pattern for Adobe Interface Definition",
          "type": "string"
        },
        "shlp": {
          "description": "The regex pattern for search helps",
          "type": "string"
        },
        "ssfo": {
          "description": "The regex pattern for smartform names",
          "type": "string"
        },
        "ssst": {
          "description": "The regex pattern for smartstyle names",
          "type": "string"
        },
        "sucu": {
          "description": "The regex pattern for Authorization Group",
          "type": "string"
        },
        "suso": {
          "description": "The regex pattern for Authorization Object",
          "type": "string"
        },
        "sxci": {
          "description": "The regex pattern for BADI Implementation",
          "type": "string"
        },
        "tabl": {
          "description": "The regex pattern for DDIC table names",
          "type": "string"
        },
        "tran": {
          "description": "The regex pattern for transaction names",
          "type": "string"
        },
        "ttyp": {
          "description": "The regex pattern for DDIC table type names",
          "type": "string"
        },
        "wdya": {
          "description": "The regex pattern for Web Dynpro Application",
          "type": "string"
        },
        "wdyn": {
          "description": "The regex pattern for Web Dynpro Component",
          "type": "string"
        },
        "xslt": {
          "description": "The regex pattern for transformation names",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ObsoleteStatementConf": {
      "additionalProperties": false,
      "properties": {
        "add": {
          "description": "Check for ADD statement",
          "type": "boolean"
        },
        "callTransformation": {
          "description": "Checks for CALL TRANSFORMATION OBJECTS",
          "type": "boolean"
        },
        "clientSpecified": {
          "description": "Check for CLIENT SPECIFIED",
          "type": "boolean"
        },
        "communication": {
          "description": "Checks for COMMUNICATION",
          "type": "boolean"
        },
        "compute": {
          "description": "Check for COMPUTE statement",
          "type": "boolean"
        },
        "divide": {
          "description": "Check for DIVIDE statement",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "exitFromSQL": {
          "description": "Checks for EXIT FROM SQL",
          "type": "boolean"
        },
        "fieldSymbolStructure": {
          "description": "Checks for FIELD-SYMBOLS ... STRUCTURE",
          "type": "boolean"
        },
        "formDefinition": {
          "description": "Check for FORM DEFINITION",
          "type": "boolean"
        },
        "formImplementation": {
          "description": "Check for FORM IMPLEMENTATION",
          "type": "boolean"
        },
        "freeMemory": {
          "description": "FREE MEMORY, without ID",
          "type": "boolean"
        },
        "load": {
          "description": "Checks for addition LOAD",
          "type": "boolean"
        },
        "move": {
          "description": "Check for MOVE statement",
          "type": "boolean"
        },
        "multiply": {
          "description": "Check for MULTIPLY statement",
          "type": "boolean"
        },
        "occurences": {
          "description": "Check for OCCURENCES vs OCCURRENCES usage",
          "type": "boolean"
        },
        "occurs": {
          "description": "Checks for usages of OCCURS",
          "type": "boolean"
        },
        "pack": {
          "description": "Checks for PACK",
          "type": "boolean"
        },
        "parameter": {
          "description": "Checks for PARAMETER",
          "type": "boolean"
        },
        "ranges": {
          "description": "Checks for RANGES",
          "type": "boolean"
        },
        "refresh": {
          "description": "Check for REFRESH statement",
          "type": "boolean"
        },
        "regex": {
          "description": "Check for POSIX REGEX usage",
          "type": "boolean"
        },
        "requested": {
          "description": "Checks for usages of IS REQUESTED",
          "type": "boolean"
        },
        "selectWithoutInto": {
          "description": "Checks for SELECT without INTO",
          "type": "boolean"
        },
        "setExtended": {
          "description": "Checks for SET EXTENDED CHECK",
          "type": "boolean"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        },
        "sortByFS": {
          "description": "Checks for SORT itab BY <fs>",
          "type": "boolean"
        },
        "subtract": {
          "description": "Check for SUBTRACT statement",
          "type": "boolean"
        },
        "typePools": {
          "description": "Checks for TYPE-POOLS",
          "type": "boolean"
        },
        "withHeaderLine": {
          "description": "Checks for WITH HEADER LINE",
          "type": "boolean"
        }
      },
      "required": [
        "refresh",
        "compute",
        "add",
        "subtract",
        "multiply",
        "divide",
        "move",
        "requested",
        "occurs",
        "setExtended",
        "withHeaderLine",
        "fieldSymbolStructure",
        "typePools",
        "load",
        "parameter",
        "ranges",
        "communication",
        "pack",
        "selectWithoutInto",
        "freeMemory",
        "exitFromSQL",
        "sortByFS",
        "callTransformation",
        "regex",
        "occurences",
        "clientSpecified",
        "formDefinition",
        "formImplementation"
      ],
      "type": "object"
    },
    "OmitParameterNameConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "OmitPrecedingZerosConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "OmitReceivingConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "Parser702ChainingConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "ParserErrorConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "ParserMissingSpaceConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "PatternKind": {
      "enum": [
        "required",
        "forbidden"
      ],
      "type": "string"
    },
    "PragmaStyleConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        },
        "style": {
          "$ref": "#/definitions/KeywordCaseStyle"
        }
      },
      "required": [
        "style"
      ],
      "type": "object"
    },
    "PreferCorrespondingConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "PreferInlineConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "PreferIsNotConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "PreferPragmasConf": {
      "additionalProperties": false,
      "properties": {
        "check": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "pragma": {
                "type": "string"
              },
              "pseudo": {
                "type": "string"
              }
            },
            "required": [
              "pseudo",
              "pragma"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "check"
      ],
      "type": "object"
    },
    "PreferRaiseExceptionNewConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "PreferReturningToExportingConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "PreferXsdboolConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "PreferredCompareOperatorConf": {
      "additionalProperties": false,
      "properties": {
        "badOperators": {
          "description": "Operators which are not allowed",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "badOperators"
      ],
      "type": "object"
    },
    "PrefixIsCurrentClassConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "omitMeInstanceCalls": {
          "description": "Checks usages of self references with 'me' when calling instance methods",
          "type": "boolean"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "omitMeInstanceCalls"
      ],
      "type": "object"
    },
    "RFCErrorHandlingConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "Recommendations": {
      "additionalProperties": false,
      "properties": {
        "from": {
          "$ref": "#/definitions/Version"
        },
        "name": {
          "pattern": "^\\w+$",
          "type": "string"
        },
        "replace": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "replace"
      ],
      "type": "object"
    },
    "ReduceStringTemplatesConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "ReleaseIdocConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "RemoveDescriptionsConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreExceptions": {
          "description": "Ignore global exception classes",
          "type": "boolean"
        },
        "ignoreWorkflow": {
          "description": "Ignore global workflow classes",
          "type": "boolean"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "ignoreExceptions",
        "ignoreWorkflow"
      ],
      "type": "object"
    },
    "SICFConsistencyConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        },
        "skipNames": {
          "description": "skip specific names, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "type": "object"
    },
    "SMIMConsistencyConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "SQLEscapeHostVariablesConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "SQLValueConversionConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "SelectAddOrderByConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "SelectPerformanceConf": {
      "additionalProperties": false,
      "properties": {
        "endSelect": {
          "description": "Detects ENDSELECT",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "selectStar": {
          "description": "Detects SELECT *",
          "type": "boolean"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        },
        "starOkayIfFewColumns": {
          "description": "\"SELECT\" * is considered okay if the table is less than X columns, the table must be known to the linter",
          "type": "number"
        }
      },
      "required": [
        "endSelect",
        "selectStar",
        "starOkayIfFewColumns"
      ],
      "type": "object"
    },
    "SelectSingleFullKeyConf": {
      "additionalProperties": false,
      "properties": {
        "allowPseudo": {
          "type": "boolean"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "allowPseudo"
      ],
      "type": "object"
    },
    "SelectionScreenNamingConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreNames": {
          "description": "A list of names to be ignored",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignorePatterns": {
          "description": "A list of patterns to be ignored. For example, you can use it to ignore ambiguous prefixes",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "parameter": {
          "description": "The pattern for selection-screen parameters",
          "type": "string"
        },
        "patternKind": {
          "$ref": "#/definitions/PatternKind",
          "description": "Specifies whether the pattern is forbidden (violation if name matches) or required (violation if name does not match)."
        },
        "screenElement": {
          "description": "The pattern for selection-screen screen elements",
          "type": "string"
        },
        "selectOption": {
          "description": "The pattern for selection-screen select-options",
          "type": "string"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "parameter",
        "selectOption",
        "screenElement"
      ],
      "type": "object"
    },
    "SequentialBlankConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "lines": {
          "description": "An equal or higher number of sequential blank lines will trigger a violation. Example: if lines = 3, a maximum of 2 is allowed.",
          "type": "number"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "lines"
      ],
      "type": "object"
    },
    "SevenBitAsciiConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "Severity": {
      "enum": [
        "Error",
        "Warning",
        "Info"
      ],
      "type": "string"
    },
    "ShortCaseConf": {
      "additionalProperties": false,
      "properties": {
        "allow": {
          "description": "List of inputs for CASE which are allowed",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "length": {
          "description": "The smallest number of WHEN branches which will trigger a violation. Example: if length = 1, at least 2 branches are required",
          "type": "number"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "length",
        "allow"
      ],
      "type": "object"
    },
    "SlowParameterPassingConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "SpaceBeforeColonConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "SpaceBeforeDotConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreExceptions": {
          "type": "boolean"
        },
        "ignoreGlobalDefinition": {
          "type": "boolean"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "ignoreGlobalDefinition",
        "ignoreExceptions"
      ],
      "type": "object"
    },
    "StartAtTabConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "StaticCallViaInstanceConf": {
      "additionalProperties": false,
      "properties": {
        "allowInTestclassIncludes": {
          "description": "Allow in test class includes",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "StrictSQLConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "SuperclassFinalConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "SuperfluousValueConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "SyModificationConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "TABLEnhancementCategoryConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "TryWithoutCatchConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "TypeFormParametersConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "TypesNamingConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "pattern": {
          "description": "The pattern for TYPES",
          "type": "string"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "required": [
        "pattern"
      ],
      "type": "object"
    },
    "UncaughtExceptionConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "UnknownTypesConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "UnnecessaryChainingConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "UnnecessaryPragmaConf": {
      "additionalProperties": false,
      "properties": {
        "allowNoTextGlobal": {
          "description": "Allow NO_TEXT in global CLAS and INTF definitions, its added automatically by SE24 in some cases where it should not",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "UnnecessaryReturnConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "UnreachableCodeConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "UnsecureFAEConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "UnusedDDICConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "UnusedMethodsConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "UnusedTypesConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        },
        "skipNames": {
          "description": "skip specific names, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "type": "object"
    },
    "UnusedVariablesConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        },
        "skipNames": {
          "description": "skip specific names, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "type": "object"
    },
    "UseBoolExpressionConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "UseClassBasedExceptionsConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "UseLineExistsConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "UseNewConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "Version": {
      "enum": [
        "open-abap",
        "v700",
        "v702",
        "v740sp02",
        "v740sp05",
        "v740sp08",
        "v750",
        "v751",
        "v752",
        "v753",
        "v754",
        "v755",
        "v756",
        "v757",
        "Cloud"
      ],
      "type": "string"
    },
    "WhenOthersLastConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "WhitespaceEndConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    },
    "XMLConsistencyConf": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "description": "List of file regex filename patterns to exclude, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Problem severity"
        }
      },
      "type": "object"
    }
  }
}
