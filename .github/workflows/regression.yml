name: Regression

on:
  push:
    branches-ignore:
      - 'main'

jobs:
  regression:
    # Check if the event is not triggered by a fork, this is stupid but its github
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-node@v2
      with:
        node-version: '12.x'

    - name: compile
      run: |
        cp .github/regression/run.js ../../run.js
        npm install && npm run link-local && npm test && cp packages/cli/build/bundle.js ../../abaplint_after
        rm -rf packages/cli/build/ && rm -rf packages/core/build/
        git checkout -f main
        git reset --hard
        git status
        npm install && npm run link-local && npm test && cp packages/cli/build/bundle.js ../../abaplint_before

    - name: run
      env:
        REPOS: '["abapGit/abapGit", "abapGit/abapgit-review-example", "larshp/abapOpenChecks", "SAP/abap-file-formats", "abapGit/CI", "abapGit/ci_tools", "abap-observability-tools/abap-metrics-provider", "abapGit/background_modes", "abapGit/ADT_Backend", "sbcgua/text2tab", "open-abap/open-abap", "FreHu/abap-turtle-graphics", "sbcgua/mockup_loader", "SAP/code-pal-for-abap", "abaplint/deps", "larshp/abapGitServer", "larshp/abapPGP", "Sumu-Ning/AES", "abaplint/abaplint-sci-client", "jrodriguez-rc/abap-tasks-tracker", "sapmentors/abap2xlsx", "sbcgua/abap-string-map", "sbcgua/ajson", "larshp/abap-wasm"]'
      run: |
        cd .. && cd ..
        ls -salh
        node ./run.js

    - uses: jwalton/gh-find-current-pr@v1
      id: findPr
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
    - run: echo ${{ steps.findPr.outputs.pr }}

    - name: Find Comment
      uses: peter-evans/find-comment@v1
      id: fc
      with:
        repository: 'abaplint/abaplint'
        issue-number: '${{steps.findPr.outputs.pr}}'
        body-includes: Regression test results
    - run: echo ${{ steps.fc.outputs.comment-id }}

    - name: Build body from file
      id: get-comment-body
      run: |
        cd .. && cd ..
        cat comment-body.txt
        body=$(cat comment-body.txt)
        body="${body//'%'/'%25'}"
        body="${body//$'\n'/'%0A'}"
        body="${body//$'\r'/'%0D'}"
        echo ::set-output name=body::$body
    - name: Create comment
      uses: peter-evans/create-or-update-comment@v1
      id: create-comment
      with:
        issue-number: '${{steps.findPr.outputs.pr}}'
        edit-mode: replace
        comment-id: '${{steps.fc.outputs.comment-id}}'
        body: ${{steps.get-comment-body.outputs.body}}
